//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FutureRecomendationSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FRDBEntities : DbContext
    {
        public FRDBEntities()
            : base("name=FRDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CategoryHobby> CategoryHobbies { get; set; }
        public virtual DbSet<Degree> Degrees { get; set; }
        public virtual DbSet<DegreeCategory> DegreeCategories { get; set; }
        public virtual DbSet<Hobby> Hobbies { get; set; }
        public virtual DbSet<Interest> Interests { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Major> Majors { get; set; }
        public virtual DbSet<MajorInterest> MajorInterests { get; set; }
        public virtual DbSet<MajorSkill> MajorSkills { get; set; }
        public virtual DbSet<PreDegree> PreDegrees { get; set; }
        public virtual DbSet<PreDegreeLevel> PreDegreeLevels { get; set; }
        public virtual DbSet<Preference> Preferences { get; set; }
        public virtual DbSet<PreLevel> PreLevels { get; set; }
        public virtual DbSet<Recommendation> Recommendations { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<University> Universities { get; set; }
        public virtual DbSet<UniversityDegree> UniversityDegrees { get; set; }
        public virtual DbSet<UniversityDegreeFee> UniversityDegreeFees { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserHobby> UserHobbies { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
        public virtual DbSet<UserInterest> UserInterests { get; set; }
        public virtual DbSet<UserSkill> UserSkills { get; set; }
    
        public virtual ObjectResult<AddCategory_Result> AddCategory(string cat)
        {
            var catParameter = cat != null ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCategory_Result>("AddCategory", catParameter);
        }
    
        public virtual ObjectResult<AddCategoryHobby_Result> AddCategoryHobby(Nullable<int> hobby, Nullable<int> cat)
        {
            var hobbyParameter = hobby.HasValue ?
                new ObjectParameter("hobby", hobby) :
                new ObjectParameter("hobby", typeof(int));
    
            var catParameter = cat.HasValue ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCategoryHobby_Result>("AddCategoryHobby", hobbyParameter, catParameter);
        }
    
        public virtual ObjectResult<AddDegree_Result> AddDegree(string degreeName, Nullable<int> catId)
        {
            var degreeNameParameter = degreeName != null ?
                new ObjectParameter("degreeName", degreeName) :
                new ObjectParameter("degreeName", typeof(string));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("catId", catId) :
                new ObjectParameter("catId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddDegree_Result>("AddDegree", degreeNameParameter, catIdParameter);
        }
    
        public virtual ObjectResult<AddHobby_Result> AddHobby(string hobbyName)
        {
            var hobbyNameParameter = hobbyName != null ?
                new ObjectParameter("hobbyName", hobbyName) :
                new ObjectParameter("hobbyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddHobby_Result>("AddHobby", hobbyNameParameter);
        }
    
        public virtual ObjectResult<AddInterest_Result> AddInterest(string interestName)
        {
            var interestNameParameter = interestName != null ?
                new ObjectParameter("interestName", interestName) :
                new ObjectParameter("interestName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddInterest_Result>("AddInterest", interestNameParameter);
        }
    
        public virtual ObjectResult<AddLocation_Result> AddLocation(string location)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddLocation_Result>("AddLocation", locationParameter);
        }
    
        public virtual ObjectResult<AddMajor_Result> AddMajor(string majorName, Nullable<int> degreeId)
        {
            var majorNameParameter = majorName != null ?
                new ObjectParameter("majorName", majorName) :
                new ObjectParameter("majorName", typeof(string));
    
            var degreeIdParameter = degreeId.HasValue ?
                new ObjectParameter("degreeId", degreeId) :
                new ObjectParameter("degreeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddMajor_Result>("AddMajor", majorNameParameter, degreeIdParameter);
        }
    
        public virtual ObjectResult<AddMajorInterest_Result> AddMajorInterest(Nullable<int> interest, Nullable<int> major, Nullable<int> rating)
        {
            var interestParameter = interest.HasValue ?
                new ObjectParameter("interest", interest) :
                new ObjectParameter("interest", typeof(int));
    
            var majorParameter = major.HasValue ?
                new ObjectParameter("major", major) :
                new ObjectParameter("major", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddMajorInterest_Result>("AddMajorInterest", interestParameter, majorParameter, ratingParameter);
        }
    
        public virtual ObjectResult<AddMajorSkill_Result> AddMajorSkill(Nullable<int> skill, Nullable<int> rating, Nullable<int> major)
        {
            var skillParameter = skill.HasValue ?
                new ObjectParameter("skill", skill) :
                new ObjectParameter("skill", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            var majorParameter = major.HasValue ?
                new ObjectParameter("major", major) :
                new ObjectParameter("major", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddMajorSkill_Result>("AddMajorSkill", skillParameter, ratingParameter, majorParameter);
        }
    
        public virtual ObjectResult<AddPreDegree_Result> AddPreDegree(string preDegree, Nullable<int> preLevel)
        {
            var preDegreeParameter = preDegree != null ?
                new ObjectParameter("preDegree", preDegree) :
                new ObjectParameter("preDegree", typeof(string));
    
            var preLevelParameter = preLevel.HasValue ?
                new ObjectParameter("preLevel", preLevel) :
                new ObjectParameter("preLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddPreDegree_Result>("AddPreDegree", preDegreeParameter, preLevelParameter);
        }
    
        public virtual ObjectResult<AddSkill_Result> AddSkill(string skill)
        {
            var skillParameter = skill != null ?
                new ObjectParameter("skill", skill) :
                new ObjectParameter("skill", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddSkill_Result>("AddSkill", skillParameter);
        }
    
        public virtual ObjectResult<AddUniversity_Result> AddUniversity(string name, Nullable<int> location, string type, Nullable<int> contact, string email, string website)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var contactParameter = contact.HasValue ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddUniversity_Result>("AddUniversity", nameParameter, locationParameter, typeParameter, contactParameter, emailParameter, websiteParameter);
        }
    
        public virtual ObjectResult<AddUniversityDegree_Result> AddUniversityDegree(Nullable<int> degree, Nullable<decimal> percentage, Nullable<int> preDegree, Nullable<int> age, Nullable<decimal> fee, Nullable<int> uniId)
        {
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(int));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(decimal));
    
            var preDegreeParameter = preDegree.HasValue ?
                new ObjectParameter("preDegree", preDegree) :
                new ObjectParameter("preDegree", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var feeParameter = fee.HasValue ?
                new ObjectParameter("fee", fee) :
                new ObjectParameter("fee", typeof(decimal));
    
            var uniIdParameter = uniId.HasValue ?
                new ObjectParameter("uniId", uniId) :
                new ObjectParameter("uniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddUniversityDegree_Result>("AddUniversityDegree", degreeParameter, percentageParameter, preDegreeParameter, ageParameter, feeParameter, uniIdParameter);
        }
    
        public virtual ObjectResult<AddUserPreferences_Result> AddUserPreferences(string email, Nullable<int> degreeId)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var degreeIdParameter = degreeId.HasValue ?
                new ObjectParameter("degreeId", degreeId) :
                new ObjectParameter("degreeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddUserPreferences_Result>("AddUserPreferences", emailParameter, degreeIdParameter);
        }
    
        public virtual ObjectResult<AddUserRecomendation_Result> AddUserRecomendation(string email, string major, string degree, string category)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var majorParameter = major != null ?
                new ObjectParameter("major", major) :
                new ObjectParameter("major", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddUserRecomendation_Result>("AddUserRecomendation", emailParameter, majorParameter, degreeParameter, categoryParameter);
        }
    
        public virtual ObjectResult<GetAllCategory_Result> GetAllCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategory_Result>("GetAllCategory");
        }
    
        public virtual ObjectResult<GetAllCategoryHobby_Result> GetAllCategoryHobby()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategoryHobby_Result>("GetAllCategoryHobby");
        }
    
        public virtual ObjectResult<GetAllDegrees_Result> GetAllDegrees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDegrees_Result>("GetAllDegrees");
        }
    
        public virtual ObjectResult<GetAllHobby_Result> GetAllHobby()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllHobby_Result>("GetAllHobby");
        }
    
        public virtual ObjectResult<GetAllInterest_Result> GetAllInterest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllInterest_Result>("GetAllInterest");
        }
    
        public virtual ObjectResult<GetAllLocation_Result> GetAllLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllLocation_Result>("GetAllLocation");
        }
    
        public virtual ObjectResult<GetAllMajor_Result> GetAllMajor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMajor_Result>("GetAllMajor");
        }
    
        public virtual ObjectResult<GetAllMajorInterest_Result> GetAllMajorInterest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMajorInterest_Result>("GetAllMajorInterest");
        }
    
        public virtual ObjectResult<GetAllMajorSkill_Result> GetAllMajorSkill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMajorSkill_Result>("GetAllMajorSkill");
        }
    
        public virtual ObjectResult<GetAllPreDegree_Result> GetAllPreDegree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPreDegree_Result>("GetAllPreDegree");
        }
    
        public virtual ObjectResult<GetAllSkill_Result> GetAllSkill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSkill_Result>("GetAllSkill");
        }
    
        public virtual ObjectResult<GetAllUniversity_Result> GetAllUniversity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUniversity_Result>("GetAllUniversity");
        }
    
        public virtual ObjectResult<GetAllUniversityDegree_Result> GetAllUniversityDegree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUniversityDegree_Result>("GetAllUniversityDegree");
        }
    
        public virtual ObjectResult<GetAllUsers_Result> GetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUsers_Result>("GetAllUsers");
        }
    
        public virtual ObjectResult<GetCategoryById_Result> GetCategoryById(Nullable<int> catId)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("catId", catId) :
                new ObjectParameter("catId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryById_Result>("GetCategoryById", catIdParameter);
        }
    
        public virtual ObjectResult<GetCategoryByName_Result> GetCategoryByName(string catName)
        {
            var catNameParameter = catName != null ?
                new ObjectParameter("catName", catName) :
                new ObjectParameter("catName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryByName_Result>("GetCategoryByName", catNameParameter);
        }
    
        public virtual ObjectResult<GetCategoryHobbyByCategory_Result> GetCategoryHobbyByCategory(Nullable<int> cat)
        {
            var catParameter = cat.HasValue ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryHobbyByCategory_Result>("GetCategoryHobbyByCategory", catParameter);
        }
    
        public virtual ObjectResult<GetCategoryHobbyByHobby_Result> GetCategoryHobbyByHobby(Nullable<int> hobby)
        {
            var hobbyParameter = hobby.HasValue ?
                new ObjectParameter("hobby", hobby) :
                new ObjectParameter("hobby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryHobbyByHobby_Result>("GetCategoryHobbyByHobby", hobbyParameter);
        }
    
        public virtual ObjectResult<GetCategoryHobbyById_Result> GetCategoryHobbyById(Nullable<int> catHobbyId)
        {
            var catHobbyIdParameter = catHobbyId.HasValue ?
                new ObjectParameter("catHobbyId", catHobbyId) :
                new ObjectParameter("catHobbyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryHobbyById_Result>("GetCategoryHobbyById", catHobbyIdParameter);
        }
    
        public virtual ObjectResult<GetDegreeByCategory_Result> GetDegreeByCategory(Nullable<int> degreeCat)
        {
            var degreeCatParameter = degreeCat.HasValue ?
                new ObjectParameter("degreeCat", degreeCat) :
                new ObjectParameter("degreeCat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDegreeByCategory_Result>("GetDegreeByCategory", degreeCatParameter);
        }
    
        public virtual ObjectResult<GetDegreeById_Result> GetDegreeById(Nullable<int> degreeId)
        {
            var degreeIdParameter = degreeId.HasValue ?
                new ObjectParameter("degreeId", degreeId) :
                new ObjectParameter("degreeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDegreeById_Result>("GetDegreeById", degreeIdParameter);
        }
    
        public virtual ObjectResult<GetDegreeByName_Result> GetDegreeByName(string degreeName)
        {
            var degreeNameParameter = degreeName != null ?
                new ObjectParameter("degreeName", degreeName) :
                new ObjectParameter("degreeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDegreeByName_Result>("GetDegreeByName", degreeNameParameter);
        }
    
        public virtual ObjectResult<GetHobbyById_Result> GetHobbyById(Nullable<int> hobbyId)
        {
            var hobbyIdParameter = hobbyId.HasValue ?
                new ObjectParameter("hobbyId", hobbyId) :
                new ObjectParameter("hobbyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHobbyById_Result>("GetHobbyById", hobbyIdParameter);
        }
    
        public virtual ObjectResult<GetHobbyByName_Result> GetHobbyByName(string hobbyName)
        {
            var hobbyNameParameter = hobbyName != null ?
                new ObjectParameter("hobbyName", hobbyName) :
                new ObjectParameter("hobbyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHobbyByName_Result>("GetHobbyByName", hobbyNameParameter);
        }
    
        public virtual ObjectResult<GetInterestById_Result> GetInterestById(Nullable<int> interestId)
        {
            var interestIdParameter = interestId.HasValue ?
                new ObjectParameter("interestId", interestId) :
                new ObjectParameter("interestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInterestById_Result>("GetInterestById", interestIdParameter);
        }
    
        public virtual ObjectResult<GetInterestByName_Result> GetInterestByName(string interestName)
        {
            var interestNameParameter = interestName != null ?
                new ObjectParameter("interestName", interestName) :
                new ObjectParameter("interestName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInterestByName_Result>("GetInterestByName", interestNameParameter);
        }
    
        public virtual ObjectResult<GetLocationById_Result> GetLocationById(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("locationId", locationId) :
                new ObjectParameter("locationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationById_Result>("GetLocationById", locationIdParameter);
        }
    
        public virtual ObjectResult<GetLocationByName_Result> GetLocationByName(string location)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationByName_Result>("GetLocationByName", locationParameter);
        }
    
        public virtual ObjectResult<GetMajorByDegree_Result> GetMajorByDegree(Nullable<int> majorDegree)
        {
            var majorDegreeParameter = majorDegree.HasValue ?
                new ObjectParameter("majorDegree", majorDegree) :
                new ObjectParameter("majorDegree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorByDegree_Result>("GetMajorByDegree", majorDegreeParameter);
        }
    
        public virtual ObjectResult<GetMajorById_Result> GetMajorById(Nullable<int> majorId)
        {
            var majorIdParameter = majorId.HasValue ?
                new ObjectParameter("majorId", majorId) :
                new ObjectParameter("majorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorById_Result>("GetMajorById", majorIdParameter);
        }
    
        public virtual ObjectResult<GetMajorByName_Result> GetMajorByName(string majorName)
        {
            var majorNameParameter = majorName != null ?
                new ObjectParameter("majorName", majorName) :
                new ObjectParameter("majorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorByName_Result>("GetMajorByName", majorNameParameter);
        }
    
        public virtual ObjectResult<GetMajorInterestById_Result> GetMajorInterestById(Nullable<int> majorInterestId)
        {
            var majorInterestIdParameter = majorInterestId.HasValue ?
                new ObjectParameter("majorInterestId", majorInterestId) :
                new ObjectParameter("majorInterestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorInterestById_Result>("GetMajorInterestById", majorInterestIdParameter);
        }
    
        public virtual ObjectResult<GetMajorInterestByInterest_Result> GetMajorInterestByInterest(Nullable<int> interest)
        {
            var interestParameter = interest.HasValue ?
                new ObjectParameter("interest", interest) :
                new ObjectParameter("interest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorInterestByInterest_Result>("GetMajorInterestByInterest", interestParameter);
        }
    
        public virtual ObjectResult<GetMajorInterestByMajor_Result> GetMajorInterestByMajor(Nullable<int> major)
        {
            var majorParameter = major.HasValue ?
                new ObjectParameter("major", major) :
                new ObjectParameter("major", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorInterestByMajor_Result>("GetMajorInterestByMajor", majorParameter);
        }
    
        public virtual ObjectResult<GetMajorSkillById_Result> GetMajorSkillById(Nullable<int> majorSkillId)
        {
            var majorSkillIdParameter = majorSkillId.HasValue ?
                new ObjectParameter("majorSkillId", majorSkillId) :
                new ObjectParameter("majorSkillId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorSkillById_Result>("GetMajorSkillById", majorSkillIdParameter);
        }
    
        public virtual ObjectResult<GetMajorSkillByMajor_Result> GetMajorSkillByMajor(Nullable<int> major)
        {
            var majorParameter = major.HasValue ?
                new ObjectParameter("major", major) :
                new ObjectParameter("major", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorSkillByMajor_Result>("GetMajorSkillByMajor", majorParameter);
        }
    
        public virtual ObjectResult<GetMajorSkillBySkill_Result> GetMajorSkillBySkill(Nullable<int> skill)
        {
            var skillParameter = skill.HasValue ?
                new ObjectParameter("skill", skill) :
                new ObjectParameter("skill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMajorSkillBySkill_Result>("GetMajorSkillBySkill", skillParameter);
        }
    
        public virtual ObjectResult<GetPreDegreeById_Result> GetPreDegreeById(Nullable<int> preDegId)
        {
            var preDegIdParameter = preDegId.HasValue ?
                new ObjectParameter("preDegId", preDegId) :
                new ObjectParameter("preDegId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPreDegreeById_Result>("GetPreDegreeById", preDegIdParameter);
        }
    
        public virtual ObjectResult<GetPreDegreeByName_Result> GetPreDegreeByName(string preDegName)
        {
            var preDegNameParameter = preDegName != null ?
                new ObjectParameter("preDegName", preDegName) :
                new ObjectParameter("preDegName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPreDegreeByName_Result>("GetPreDegreeByName", preDegNameParameter);
        }
    
        public virtual ObjectResult<GetSkillById_Result> GetSkillById(Nullable<int> skillId)
        {
            var skillIdParameter = skillId.HasValue ?
                new ObjectParameter("skillId", skillId) :
                new ObjectParameter("skillId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkillById_Result>("GetSkillById", skillIdParameter);
        }
    
        public virtual ObjectResult<GetSkillByName_Result> GetSkillByName(string skillName)
        {
            var skillNameParameter = skillName != null ?
                new ObjectParameter("skillName", skillName) :
                new ObjectParameter("skillName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkillByName_Result>("GetSkillByName", skillNameParameter);
        }
    
        public virtual ObjectResult<GetUniversityById_Result> GetUniversityById(Nullable<int> uniId)
        {
            var uniIdParameter = uniId.HasValue ?
                new ObjectParameter("uniId", uniId) :
                new ObjectParameter("uniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUniversityById_Result>("GetUniversityById", uniIdParameter);
        }
    
        public virtual ObjectResult<GetUniversityByLocation_Result> GetUniversityByLocation(Nullable<int> uniLoc)
        {
            var uniLocParameter = uniLoc.HasValue ?
                new ObjectParameter("uniLoc", uniLoc) :
                new ObjectParameter("uniLoc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUniversityByLocation_Result>("GetUniversityByLocation", uniLocParameter);
        }
    
        public virtual ObjectResult<GetUniversityByName_Result> GetUniversityByName(string uniName)
        {
            var uniNameParameter = uniName != null ?
                new ObjectParameter("uniName", uniName) :
                new ObjectParameter("uniName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUniversityByName_Result>("GetUniversityByName", uniNameParameter);
        }
    
        public virtual ObjectResult<GetUniversityByType_Result> GetUniversityByType(string uniType)
        {
            var uniTypeParameter = uniType != null ?
                new ObjectParameter("uniType", uniType) :
                new ObjectParameter("uniType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUniversityByType_Result>("GetUniversityByType", uniTypeParameter);
        }
    
        public virtual ObjectResult<string> GetUserHobbies(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserHobbies", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetUserId(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetUserId", emailParameter);
        }
    
        public virtual ObjectResult<GetUserInfo_Result> GetUserInfo(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserInfo_Result>("GetUserInfo", emailParameter);
        }
    
        public virtual ObjectResult<GetUserInterests_Result> GetUserInterests(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserInterests_Result>("GetUserInterests", emailParameter);
        }
    
        public virtual ObjectResult<GetUserPreferences_Result> GetUserPreferences(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserPreferences_Result>("GetUserPreferences", emailParameter);
        }
    
        public virtual ObjectResult<GetUserRecomendations_Result> GetUserRecomendations(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserRecomendations_Result>("GetUserRecomendations", emailParameter);
        }
    
        public virtual ObjectResult<GetUserSkills_Result> GetUserSkills(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserSkills_Result>("GetUserSkills", emailParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<UniversityDegreeByDegree_Result> UniversityDegreeByDegree(Nullable<int> degree)
        {
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UniversityDegreeByDegree_Result>("UniversityDegreeByDegree", degreeParameter);
        }
    
        public virtual ObjectResult<UniversityDegreeById_Result> UniversityDegreeById(Nullable<int> univDegId)
        {
            var univDegIdParameter = univDegId.HasValue ?
                new ObjectParameter("univDegId", univDegId) :
                new ObjectParameter("univDegId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UniversityDegreeById_Result>("UniversityDegreeById", univDegIdParameter);
        }
    
        public virtual ObjectResult<UserAddHobbies_Result> UserAddHobbies(string email, string hobby)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var hobbyParameter = hobby != null ?
                new ObjectParameter("hobby", hobby) :
                new ObjectParameter("hobby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserAddHobbies_Result>("UserAddHobbies", emailParameter, hobbyParameter);
        }
    
        public virtual ObjectResult<UserAddInterests_Result> UserAddInterests(string email, string interest, Nullable<int> rating)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var interestParameter = interest != null ?
                new ObjectParameter("interest", interest) :
                new ObjectParameter("interest", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserAddInterests_Result>("UserAddInterests", emailParameter, interestParameter, ratingParameter);
        }
    
        public virtual ObjectResult<UserAddSkills_Result> UserAddSkills(string email, string skill, Nullable<int> rating)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var skillParameter = skill != null ?
                new ObjectParameter("skill", skill) :
                new ObjectParameter("skill", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserAddSkills_Result>("UserAddSkills", emailParameter, skillParameter, ratingParameter);
        }
    
        public virtual ObjectResult<UserSignIn_Result> UserSignIn(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSignIn_Result>("UserSignIn", emailParameter, passwordParameter);
        }
    
        public virtual int UserSignUp(string email, string password, string firstName, string secondName, Nullable<decimal> percentage, Nullable<decimal> annualBudget, string location, string qualification)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var secondNameParameter = secondName != null ?
                new ObjectParameter("secondName", secondName) :
                new ObjectParameter("secondName", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(decimal));
    
            var annualBudgetParameter = annualBudget.HasValue ?
                new ObjectParameter("annualBudget", annualBudget) :
                new ObjectParameter("annualBudget", typeof(decimal));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSignUp", emailParameter, passwordParameter, firstNameParameter, secondNameParameter, percentageParameter, annualBudgetParameter, locationParameter, qualificationParameter);
        }
    }
}
